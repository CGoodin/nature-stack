<launch>

  <param name="/use_sim_time" value="false"/> 
  <arg name="display" default="rviz"/>
  <arg name="auto_launch_rviz" default="true"/>

  <rosparam file="$(find nature)/config/waypoints.yaml" />

  <rosparam file="$(find nature)/config/map_obstacles.yaml" />

  <param name="robot_description" command="cat $(find nature)/config/example_bot.urdf" />


  <group if="$(eval env('ROS_DISTRO') =='noetic')"> 
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />
  </group>
  <group if="$(eval env('ROS_DISTRO') =='melodic')"> 
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />
  </group>
  <group if="$(eval env('ROS_DISTRO') =='lunar')"> 
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="state_publisher" />
  </group>
  <group if="$(eval env('ROS_DISTRO') =='kinetic')"> 
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="state_publisher" />
  </group>

  <node pkg="tf"  name="static_transform_publisher" type="static_transform_publisher" args="0 0 0 0 0 0 1 map odom 10" />
  <node name="state_publisher" pkg="nature" type="nature_bot_state_publisher_node" />

  <!-- Lidar perception algorithms  -->
  <node name="perception_node" pkg="nature" type="nature_map_publisher_node" required="true" output="screen">
    <param name="grid_height" value="120.0" />
    <param name="grid_width" value="120.0" />
    <param name="grid_llx" value="-60.0" />
    <param name="grid_lly" value="-60.0" />
    <param name="grid_res" value="0.25" />
    <param name="display" value="$(arg display)" />
  </node>

  <node name="vehicle_control_node" pkg="nature" type="nature_control_node" required="true" output="screen" >
    <param name="vehicle_wheelbase" value="2.72" />
    <param name="vehicle_max_steer_angle_degrees" value="35.0" />
    <param name="steering_coefficient" value="4.5" />
    <param name="throttle_coefficient" value="1.0" />
    <param name="vehicle_speed" value="5.0" />
    <param name="throttle_kp" value="0.2295" />
    <param name="throttle_ki" value="0.070" />
    <param name="throttle_kd" value="0.0" />
    <param name="max_desired_lateral_g" value="0.5" />
    <param name="time_to_max_brake" value="4.0" />
    <param name="time_to_max_throttle" value="3.0" />
  </node>

<!--
  <node name="nature_path_manager_node" pkg="nature" type="nature_path_manager_node" required="true" output="screen">
    <param name="wait_period" value="30.0" />
  </node>
  -->

  <node name="global_path_node" pkg="nature" type="nature_global_path_node" required="true" output="screen" >
    <param name="goal_dist" value="8.0" />
    <param name="global_lookahead" value="75.0" />
    <param name="shutdown_behavior" value="2" />
    <param name="display" value="$(arg display)" />
  </node>


  <node name="local_planner_node" pkg="nature" type="nature_local_planner_node" output="screen" required="true" >
    <param name="path_look_ahead" value="20.0" /> 
    <param name="vehicle_width" value="3.0" />
    <param name="use_global_path" value="false" />
    <param name="num_paths" value="31" />
    <param name="max_steer_angle" value="0.4" />
    <param name="output_path_step" value="0.5" />
    <param name="path_integration_step" value="0.25" />
    <param name="dilation_factor" value="3" />
    <param name="w_c" value="0.0" />
    <param name="w_s" value="0.95" />
    <param name="w_d" value="0.0" />
    <param name="w_r" value="0.05" /> 
    <param name="rate" value="50.0" />
    <param name="trim_path" value="true" />
    <param name="display" value="$(arg display)" />
  </node>

  <include file="$(find mavs_ros)/launch/mavs_sim.launch">
    <arg name="cmd_vel_topic_arg" default="nature/cmd_vel" />
    <arg name="point_cloud_topic_arg" default="nature/points" />
    <arg name="odometry_topic_arg" default="nature/odometry" />
  </include>

  <group if="$(eval arg('display') == 'rviz' and arg('auto_launch_rviz'))">
    <node name="rviz" pkg="rviz" type="rviz" args="-d $(find nature)/rviz/nature.rviz" />
  </group>

</launch>